/* Generated By:JavaCC: Do not edit this line. TikiDBParserConstants.java */
package de.tud.dvs.parser.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TikiDBParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 5;
  /** RegularExpression Id. */
  int OR = 6;
  /** RegularExpression Id. */
  int NOT = 7;
  /** RegularExpression Id. */
  int EQUAL = 8;
  /** RegularExpression Id. */
  int DISTINCT = 9;
  /** RegularExpression Id. */
  int GREATERTHAN = 10;
  /** RegularExpression Id. */
  int LESSTHAN = 11;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 12;
  /** RegularExpression Id. */
  int LESSOREQUAL = 13;
  /** RegularExpression Id. */
  int BOOLEAN = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int SENSOR_TYPE = 17;
  /** RegularExpression Id. */
  int SELECT = 18;
  /** RegularExpression Id. */
  int FROM = 19;
  /** RegularExpression Id. */
  int WHERE = 20;
  /** RegularExpression Id. */
  int GROUP = 21;
  /** RegularExpression Id. */
  int BY = 22;
  /** RegularExpression Id. */
  int SAMPLE = 23;
  /** RegularExpression Id. */
  int PERIOD = 24;
  /** RegularExpression Id. */
  int LIFETIME = 25;
  /** RegularExpression Id. */
  int SENSORS = 26;
  /** RegularExpression Id. */
  int SUBSCOPES = 27;
  /** RegularExpression Id. */
  int NODE_ID = 28;
  /** RegularExpression Id. */
  int REPOSITORY_KEY = 29;
  /** RegularExpression Id. */
  int CREATE = 30;
  /** RegularExpression Id. */
  int REMOVE = 31;
  /** RegularExpression Id. */
  int SEND = 32;
  /** RegularExpression Id. */
  int DATA = 33;
  /** RegularExpression Id. */
  int SCOPE = 34;
  /** RegularExpression Id. */
  int AS = 35;
  /** RegularExpression Id. */
  int SUBSCOPE = 36;
  /** RegularExpression Id. */
  int EXISTS = 37;
  /** RegularExpression Id. */
  int SENSOR = 38;
  /** RegularExpression Id. */
  int PAYLOAD = 39;
  /** RegularExpression Id. */
  int SOURCE_MODULE = 40;
  /** RegularExpression Id. */
  int DEST_MODULE = 41;
  /** RegularExpression Id. */
  int TYPE = 42;
  /** RegularExpression Id. */
  int IN = 43;
  /** RegularExpression Id. */
  int POLYGON = 44;
  /** RegularExpression Id. */
  int SPHERE = 45;
  /** RegularExpression Id. */
  int NODE_POSITION = 46;
  /** RegularExpression Id. */
  int OF = 47;
  /** RegularExpression Id. */
  int HEX_DATA = 48;
  /** RegularExpression Id. */
  int HEX_CHAR = 49;
  /** RegularExpression Id. */
  int SCOPE_IDENTIFIER = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int DIGIT = 52;
  /** RegularExpression Id. */
  int NUM = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<AND>",
    "<OR>",
    "<NOT>",
    "<EQUAL>",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "<GREATEROREQUAL>",
    "<LESSOREQUAL>",
    "<BOOLEAN>",
    "\"TRUE\"",
    "\"FALSE\"",
    "<SENSOR_TYPE>",
    "\"SELECT\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"GROUP\"",
    "\"BY\"",
    "\"SAMPLE\"",
    "\"PERIOD\"",
    "\"LIFETIME\"",
    "\"SENSORS\"",
    "\"SUBSCOPES\"",
    "\"NODE_ID\"",
    "\"REPOSITORY_KEY\"",
    "\"CREATE\"",
    "\"REMOVE\"",
    "\"SEND\"",
    "\"DATA\"",
    "\"SCOPE\"",
    "\"AS\"",
    "\"SUBSCOPE\"",
    "\"EXISTS\"",
    "\"SENSOR\"",
    "\"PAYLOAD\"",
    "\"SOURCE_MODULE\"",
    "\"DEST_MODULE\"",
    "\"TYPE\"",
    "\"IN\"",
    "\"POLYGON\"",
    "\"SPHERE\"",
    "\"NODE_POSITION\"",
    "\"OF\"",
    "<HEX_DATA>",
    "<HEX_CHAR>",
    "<SCOPE_IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<NUM>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
  };

}
